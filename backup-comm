#!/usr/bin/perl
use strict;
use warnings;

sub run(@);

my $BASE_DIR = "$ENV{HOME}/Code/s5";
my $BACKUP_DIR = "$BASE_DIR/backup";
my $DB_DIR = "$BACKUP_DIR/backup-dbs";
my $DB_REPO = "$DB_DIR/repo";
my $SMS_DIR = "$BACKUP_DIR/backup-sms";
my $SMS_REPO = "$SMS_DIR/repo";
my $CALL_DIR = "$BACKUP_DIR/backup-call";
my $CALL_REPO = "$CALL_DIR/repo";

my $COMM_TOOLS_DIR = "$BASE_DIR/comm-tools";
my $CMD_ADD_COMM_TO_REPO = "$COMM_TOOLS_DIR/add-comm-to-repo.pl";
my $CMD_SMS_DB_IMPORTER = "$COMM_TOOLS_DIR/sms_db_importer.py";
my $CMD_CALL_DB_EXTRACT = "$COMM_TOOLS_DIR/call-db-extract.pl";

my $DATA_MOUNTPOINT = "/mnt/android-data";
my $MMSSMS_DB_REMOTE_FILE = "/data/com.android.providers.telephony/databases/mmssms.db";
my $CONTACTS_DB_REMOTE_FILE = "/data/com.android.providers.contacts/databases/contacts2.db",
my $MMS_PARTS_REMOTE_DIR = "/data/com.android.providers.telephony/app_parts",

my $MMS_PARTS_REPO = "$BACKUP_DIR/backup-mms-parts-repo";

sub main(@){
  my $host = `s5`;
  die "failed to get host" if $? != 0;
  chomp $host;

  my $now = `date +'%Y-%m-%d_%s'`;
  chomp $now;

  my $mmssmsDb = "$DB_DIR/mmssms-$now.db";
  my $contactsDb = "$DB_DIR/contacts2-$now.db";

  run "scp", "root\@$host:$DATA_MOUNTPOINT/$MMSSMS_DB_REMOTE_FILE", $mmssmsDb;
  run "sqlite3", $mmssmsDb,
    ".output $DB_REPO/mmssms-db",
    ".dump",
    ;
  run "cd $DB_REPO; git add mmssms-db; git commit -m 'mmssms db automatic commit'";
  my $smsFile = "$SMS_DIR/sms-$now.sms";
  run "$CMD_SMS_DB_IMPORTER $smsFile $mmssmsDb --db-to-csv";
  die "error running $CMD_SMS_DB_IMPORTER\n" if $? != 0;
  run "$CMD_ADD_COMM_TO_REPO", "--sms", $smsFile;
  run "cd $SMS_REPO; git add *.sms; git commit -m 'automatic commit'";

  run "scp", "root\@$host:$DATA_MOUNTPOINT/$CONTACTS_DB_REMOTE_FILE", $contactsDb;
  run "sqlite3", $contactsDb,
    ".output $DB_REPO/contacts-db",
    ".dump",
    ;
  run "cd $DB_REPO; git add contacts-db; git commit -m 'contacts db automatic commit'";

  run "rsync", "-avP", "$host:$DATA_MOUNTPOINT/$MMS_PARTS_REMOTE_DIR/", "$MMS_PARTS_REPO/";
  run "cd $MMS_PARTS_REPO; git add -A; git commit -m 'automatic commit'";
  my $callFile = "$CALL_DIR/call-$now.call";
  run "$CMD_CALL_DB_EXTRACT $contactsDb > $callFile";
  die "error running $CMD_CALL_DB_EXTRACT\n" if $? != 0;
  run "$CMD_ADD_COMM_TO_REPO", "--call", $callFile;
  run "cd $CALL_REPO; git add *.call; git commit -m 'automatic commit'";
}

sub copyDbToRepo($$){
  my ($sqliteDb, $repo) = @_;
}

sub run(@){
  print "@_\n";
  system @_;
}

&main(@ARGV);
