#!/usr/bin/perl
use strict;
use warnings;

my $user = "android";
my $group = "android";

my $localPurpleDir = "$ENV{HOME}/.purple";
my $remotePurpleDir = "/home/$user/.purple";

my @opts = qw(
  -a  --no-owner --no-group
  -v  -P
  -z
);

sub run(@);

sub main(@){
  die "Usage: $0\n" if @_ != 0;
  my $host = `s5`;
  chomp $host;

  my $rem = "$user\@$host:$remotePurpleDir";
  my $loc = $localPurpleDir;

  my $remoteUserGroup = "$user.$group";
  my $localUserGroup = "$ENV{USER}" . "." . `id -gn $ENV{USER}`;
  chomp $localUserGroup;

  my $dirOk = `s5 -s 'test -d $remotePurpleDir && echo success || echo failure'`;
  $dirOk =~ s/\r|\n//g;
  if($dirOk eq "success"){
    print "$remotePurpleDir exists, syncing just logs\n";
  }elsif($dirOk eq "failure"){
    print "!!$remotePurpleDir does NOT exist, syncing all of purple\n";
    run "rsync", @opts, "--exclude=logs", "$loc/", $rem;
    run "s5", "-s", "mkdir $remotePurpleDir/logs";
    run "s5", "-s", "chown -R $remoteUserGroup $remotePurpleDir/";
  }else{
    die "error detecting $remotePurpleDir\n";
  }

  print "\n\nlogs REMOTE => LOCAL\n";
  run "rsync", @opts, "$rem/logs/", "$loc/logs";
  print "\n\nlogs LOCAL => REMOTE\n";
  run "rsync", @opts, "$loc/logs/", "$rem/logs";

  print "\n\nCHOWN REMOTE\n";
  run "ssh", "$user\@$host", "chown -R $remoteUserGroup $remotePurpleDir/logs";
  print "\n\nCHOWN LOCAL\n";
  run "chown", "-R", $localUserGroup, "$localPurpleDir/logs";
}

sub run(@){
  print "@_\n";
  system @_;
  die "failed" if $? != 0;
}

&main(@ARGV);
