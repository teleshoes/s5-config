#!/usr/bin/perl
use strict;
use warnings;

my $ipmagicName = "s5";

sub broadcastMediaMounted($);
sub clearCacheRestartApp($);
sub run(@);
sub backup($);

my $dir = "$ENV{HOME}/Code/s5";

sub main(@){
  die "Usage: $0\n" if @_ != 0;

  print "making sure s5 is ssh-able\n";
  system "ipmagic", $ipmagicName, "-s", "echo found s5!\n";
  die "failed" if $? != 0;

  backup "dcim-backup";
  backup "backup-comm";

  clearCacheRestartApp('com.android.providers.media');
  clearCacheRestartApp('com.android.gallery3d');

  my @sdcardDirs = `ipmagic $ipmagicName -s ls -d /storage/*-*`;
  for my $sdcardDir(@sdcardDirs){
    chomp $sdcardDir;
    broadcastMediaMounted("$sdcardDir");
    broadcastMediaMounted("$sdcardDir/DCIM");
    broadcastMediaMounted("$sdcardDir");
  }
}

sub broadcastMediaMounted($){
  my ($dir) = @_;
  run "ipmagic $ipmagicName -s am broadcast -a android.intent.action.MEDIA_MOUNTED -d file://$dir";
}

sub clearCacheRestartApp($){
  my ($app) = @_;
  run "ipmagic $ipmagicName -s pm clear $app";
  run "ipmagic $ipmagicName -s am force-stop $app";
  run "ipmagic $ipmagicName -s pm disable $app";
  run "ipmagic $ipmagicName -s pm clear $app";
  run "ipmagic $ipmagicName -s pm enable $app";
}

sub run(@){
  print "@_\n";
  system @_;
}

sub backup($){
  my $backupScript = shift;

  print "\n\n\n=========$backupScript\n";
  system "$dir/$backupScript";

  die "$backupScript failed" if $? != 0;
}

&main(@ARGV);
